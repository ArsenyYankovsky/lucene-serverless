service: lucene-serverless

frameworkVersion: ">=1.56.1"

provider:
  name: aws
  region: eu-north-1 # TODO: replace with your region
  versionFunctions: false
  tracing: false
  timeout: 15
  environment:
    stage: ${self:custom.stage}
    DISABLE_SIGNAL_HANDLERS: true
  iamRoleStatements:
    ${file(roleStatements.yml)}

custom:
  name: ${self:custom.stage}-${self:service}
  stage: ${opt:stage, self:provider.stage}
  region: ${opt:region, self:provider.region}

package:
  individually: true

functions:
  query:
    name: ${self:custom.name}-query
    runtime: provided
    handler: native.handler
    events:
      - http: POST query
    package:
      artifact: target/function.zip
    environment:
      QUARKUS_LAMBDA_HANDLER: query
      QUARKUS_PROFILE: ${opt:stage, self:provider.stage}
      BUCKET_NAME:
        Ref: S3Bucket

  index:
    name: ${self:custom.name}-index
    runtime: provided
    handler: native.handler
    reservedConcurrency: 1
    timeout: 180
    package:
      artifact: target/function.zip
    environment:
      QUARKUS_LAMBDA_HANDLER: index
      QUARKUS_PROFILE: ${opt:stage, self:provider.stage}
      BUCKET_NAME:
        Ref: S3Bucket
    events:
      - sqs:
          arn:
            Fn::GetAtt: [ WriteQueue, Arn ]
          batchSize: 5000
          maximumBatchingWindow: 5

  enqueue-index:
    name: ${self:custom.name}-enqueue-index
    runtime: provided
    handler: native.handler
    package:
      artifact: target/function.zip
    events:
      - http: POST index
    environment:
      QUARKUS_LAMBDA_HANDLER: enqueue-index
      QUARKUS_PROFILE: ${opt:stage, self:provider.stage}
      QUEUE_URL:
        Ref: WriteQueue

  delete-index:
    name: ${self:custom.name}-delete-index
    runtime: provided
    handler: native.handler
    package:
      artifact: target/function.zip
    environment:
      QUARKUS_LAMBDA_HANDLER: deleteIndex
      QUARKUS_PROFILE: ${opt:stage, self:provider.stage}

resources:
  Resources:
    WriteQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.name}-write-queue
        VisibilityTimeout: 900
        RedrivePolicy:
          deadLetterTargetArn:
            Fn::GetAtt: [ WriteDLQ, Arn ]
          maxReceiveCount: 5

    WriteDLQ:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.name}-write-dlq
        MessageRetentionPeriod: 1209600 # 14 days in seconds

    S3Bucket:
      Type: 'AWS::S3::Bucket'
      Properties:
        BucketName: ${self:custom.name}-index-data
